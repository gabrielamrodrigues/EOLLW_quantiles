rm(list = ls())

##Gamlss Model
source('EOLLW_025.R') 
##Use EOLLE_050 for quantile 0.50 e EOLLW_075 for quantile 0.75
library(gamlss.cens)


# Function to generate regression model with 1 covariate
reg_eollw <- function(n,beta10,beta11,beta20,beta21,beta30,beta40){
  x1 <- rbinom(n,1,0.5)
  mu <- exp(beta10+beta11*x1)
  sigma <- exp(beta20+beta21*x1)
  nu <- exp(beta30)
  tau <- exp(beta40)
  y <- rEOLLW_050(n=n,mu=mu,sigma=sigma,nu=nu,tau=tau)
  return(list(y=y,x1=x1,mu=mu,sigma=sigma,nu=nu,tau=tau))
}

##Initial Values
beta10 <- 1.50;beta11 <- -1.32;beta20 <- 0.8;beta21 <- 0.2;
beta30 <- 1.1;beta40 <- 0.4
initial <- c(beta10,beta11,beta20,beta21,beta30,beta40)


# Generate censored data
estimativas_cens <- function(n,beta10,beta11,beta20,beta21,beta30,beta40,porc.cens,tau){
  reg <- reg_eollw(n,beta10,beta11,beta20,beta21,beta30,beta40)
  tempos <- reg$y
  x1 <- reg$x1
  mu0 <- reg$mu
  sigma0 <- reg$sigma
  nu0 <- reg$nu
  tau0 <- reg$tau
  tempo.cens <- runif(n,0,tau)
  delta <- c()
  tempo <- c()
  k <- 0
  for(j in 1:n){
    if(tempo.cens[j] <= tempos[j] && k < round(n*porc.cens/100))
    {delta[j] <- 0
    tempo[j] <- tempo.cens[j]
    k <- k+1}
    else
    {delta[j] <- 1
    tempo[j] <- tempos[j]}
  }
  dados <- data.frame(tempo,delta,x1,mu0,sigma0,tau0,nu0)
  return(dados)
}

##0% n=500
n <- 500

gama <- 10
porc.cens <- 0

##for 10% censorship use porc.cens=10
##for 10% censorship use gamma=10

##for 50% censorship use porc.cens=50
##for 50% censorship use gamma=5

npar <- 6
r <- 1000
theta <- matrix(0,r,npar)
res.rq <- matrix(0,r,n)
se <- list()
i <- 1
iter <- 0
cens.vector <- c()


set.seed(1311)
while(i<=r){
x1 <- rbinom(n,1,0.5)
mu <- exp(beta10+beta11*x1)
sigma <- exp(beta20+beta21*x1)
nu <- exp(beta30)
tau <- exp(beta40)
y <- rEOLLW_025(n=n,mu=mu,sigma=sigma,nu=nu,tau=tau)
tempo.cens <- runif(n,0,gama)
delta <- c()
tempo <- c()
k <- 0
for(j in 1:n){
    if(tempo.cens[j] <= y[j] && k < round(n*porc.cens/100))
    {delta[j] <- 0
    tempo[j] <- tempo.cens[j]
    k <- k+1}
    else
    {delta[j] <- 1
    tempo[j] <- y[j]}}
  dados1 <- data.frame(tempo,delta,x1)
  ajuste1=try(gamlss(Surv(tempo,delta)~x1,c.crit=0.1,sigma.formula = ~x1, family = cens(EOLLW_025),n.cyc=200,data=dados1,sigma.start = sigma, mu.start = mu,nu.start = nu,tau.start=tau,trace=F))
  if((class(ajuste1)[1] != "try-error")==T){
    teste <- ajuste1$converged
    if(teste == TRUE){
      betas <- c(mu=ajuste1$mu.coefficients ,sigma=ajuste1$sigma.coefficients,nu=ajuste1$nu.coefficients,tau=ajuste1$tau.coefficients)
      theta[i,] <-  betas
      res.rq[i,] = ajuste1$residuals
      se[[i]] <- summary(ajuste1,type='qr')
      cens.vector[i] <- summary(as.factor(dados1$delta))[1]
      i <- i+1
    }
    else{i <- i}
  }
  else{i <- i}
}

theta500_cens0 <- theta
se500_cens0 <- se
cens.vector500.0 <- cens.vector


##0% n=300
n <- 300

gama <- 10
porc.cens <- 0

##for 10% censorship use porc.cens=10
##for 10% censorship use gamma=10

##for 50% censorship use porc.cens=50
##for 50% censorship use gamma=5

npar <- 6
r <- 1000
theta <- matrix(0,r,npar)
res.rq <- matrix(0,r,n)
se <- list()
i <- 1
iter <- 0
cens.vector <- c()


set.seed(1311)
while(i<=r){
  x1 <- rbinom(n,1,0.5)
  mu <- exp(beta10+beta11*x1)
  sigma <- exp(beta20+beta21*x1)
  nu <- exp(beta30)
  tau <- exp(beta40)
  y <- rEOLLW_025(n=n,mu=mu,sigma=sigma,nu=nu,tau=tau)
  tempo.cens <- runif(n,0,gama)
  delta <- c()
  tempo <- c()
  k <- 0
  for(j in 1:n){
    if(tempo.cens[j] <= y[j] && k < round(n*porc.cens/100))
    {delta[j] <- 0
    tempo[j] <- tempo.cens[j]
    k <- k+1}
    else
    {delta[j] <- 1
    tempo[j] <- y[j]}}
  dados1 <- data.frame(tempo,delta,x1)
  ajuste1=try(gamlss(Surv(tempo,delta)~x1,c.crit=0.1,sigma.formula = ~x1, family = cens(EOLLW_025),n.cyc=200,data=dados1,sigma.start = sigma, mu.start = mu,nu.start = nu,tau.start=tau,trace=F))
  if((class(ajuste1)[1] != "try-error")==T){
    teste <- ajuste1$converged
    if(teste == TRUE){
      betas <- c(mu=ajuste1$mu.coefficients ,sigma=ajuste1$sigma.coefficients,nu=ajuste1$nu.coefficients,tau=ajuste1$tau.coefficients)
      theta[i,] <-  betas
      res.rq[i,] = ajuste1$residuals
      se[[i]] <- summary(ajuste1,type='qr')
      cens.vector[i] <- summary(as.factor(dados1$delta))[1]
      i <- i+1
    }
    else{i <- i}
  }
  else{i <- i}
}

theta300_cens0 <- theta
se300_cens0 <- se
cens.vector300.0 <- cens.vector


##0% n=100
n <- 100

gama <- 10
porc.cens <- 0
##for 10% censorship use porc.cens=10
##for 10% censorship use gamma=10

##for 50% censorship use porc.cens=50
##for 50% censorship use gamma=4

npar <- 6
r <- 1000
theta <- matrix(0,r,npar)
res.rq <- matrix(0,r,n)
se <- list()
i <- 1
iter <- 0
cens.vector <- c()


set.seed(1311)
while(i<=r){
  x1 <- rbinom(n,1,0.5)
  mu <- exp(beta10+beta11*x1)
  sigma <- exp(beta20+beta21*x1)
  nu <- exp(beta30)
  tau <- exp(beta40)
  y <- rEOLLW_025(n=n,mu=mu,sigma=sigma,nu=nu,tau=tau)
  tempo.cens <- runif(n,0,gama)
  delta <- c()
  tempo <- c()
  k <- 0
  for(j in 1:n){
    if(tempo.cens[j] <= y[j] && k < round(n*porc.cens/100))
    {delta[j] <- 0
    tempo[j] <- tempo.cens[j]
    k <- k+1}
    else
    {delta[j] <- 1
    tempo[j] <- y[j]}}
  dados1 <- data.frame(tempo,delta,x1)
  ajuste1=try(gamlss(Surv(tempo,delta)~x1,c.crit=0.1,sigma.formula = ~x1, family = cens(EOLLW_025),n.cyc=200,data=dados1,sigma.start = sigma, mu.start = mu,nu.start = nu,tau.start=tau,trace=F))
  if((class(ajuste1)[1] != "try-error")==T){
    teste <- ajuste1$converged
    if(teste == TRUE){
      betas <- c(mu=ajuste1$mu.coefficients ,sigma=ajuste1$sigma.coefficients,nu=ajuste1$nu.coefficients,tau=ajuste1$tau.coefficients)
      theta[i,] <-  betas
      res.rq[i,] = ajuste1$residuals
      se[[i]] <- summary(ajuste1,type='qr')
      cens.vector[i] <- summary(as.factor(dados1$delta))[1]
      i <- i+1
    }
    else{i <- i}
  }
  else{i <- i}
}

theta100_cens0 <- theta
se100_cens0 <- se
cens.vector100.0 <- cens.vector


# Calculate results

## n=100 0% cens
estimates <- theta100_cens0
n <- 100

mean.estimates <- apply(estimates, 2, mean) 
sd <- apply(estimates, 2, sd)
errop <- sd/sqrt(n) 
var <- apply(estimates, 2,var) 
eqm <- c( var[1]+(mean.estimates[1]-initial[1])^2,
          var[2]+(mean.estimates[2]-initial[2])^2,
          var[3]+(mean.estimates[3]-initial[3])^2,
          var[4]+(mean.estimates[4]-initial[4])^2,
          var[5]+(mean.estimates[5]-initial[5])^2,
          var[6]+(mean.estimates[6]-initial[6])^2)

vies <- c( (mean.estimates[1]-initial[1]),
           (mean.estimates[2]-initial[2]),
           (mean.estimates[3]-initial[3]),
           (mean.estimates[4]-initial[4]),
           (mean.estimates[5]-initial[5]),
           (mean.estimates[6]-initial[6]))
results100 <- data.frame(mean.estimates, vies,eqm)


## n=300 0% cens
estimates <- theta300_cens0
n <- 300

mean.estimates <- apply(estimates, 2, mean) 
sd <- apply(estimates, 2, sd)
errop <- sd/sqrt(n) 
var <- apply(estimates, 2,var) 
eqm <- c( var[1]+(mean.estimates[1]-initial[1])^2,
          var[2]+(mean.estimates[2]-initial[2])^2,
          var[3]+(mean.estimates[3]-initial[3])^2,
          var[4]+(mean.estimates[4]-initial[4])^2,
          var[5]+(mean.estimates[5]-initial[5])^2,
          var[6]+(mean.estimates[6]-initial[6])^2)

vies <- c( (mean.estimates[1]-initial[1]),
           (mean.estimates[2]-initial[2]),
           (mean.estimates[3]-initial[3]),
           (mean.estimates[4]-initial[4]),
           (mean.estimates[5]-initial[5]),
           (mean.estimates[6]-initial[6]))
results300 <- data.frame(mean.estimates, vies,eqm)


## n=500 0% cens
estimates <- theta500_cens0
n <- 500

mean.estimates <- apply(estimates, 2, mean) 
sd <- apply(estimates, 2, sd)
errop <- sd/sqrt(n) 
var <- apply(estimates, 2,var) 
eqm <- c( var[1]+(mean.estimates[1]-initial[1])^2,
          var[2]+(mean.estimates[2]-initial[2])^2,
          var[3]+(mean.estimates[3]-initial[3])^2,
          var[4]+(mean.estimates[4]-initial[4])^2,
          var[5]+(mean.estimates[5]-initial[5])^2,
          var[6]+(mean.estimates[6]-initial[6])^2)

vies <- c( (mean.estimates[1]-initial[1]),
           (mean.estimates[2]-initial[2]),
           (mean.estimates[3]-initial[3]),
           (mean.estimates[4]-initial[4]),
           (mean.estimates[5]-initial[5]),
           (mean.estimates[6]-initial[6]))
results500 <- data.frame(mean.estimates, vies,eqm)








